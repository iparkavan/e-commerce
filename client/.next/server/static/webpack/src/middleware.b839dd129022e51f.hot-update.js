"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ \"(middleware)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n\n\n// This function can be marked `async` if using `await` inside\n// const protectedRoutes = ['/']\n// const publicRoutes = ['/login', '/signup']\nasync function middleware(request) {\n    const authToken = request.cookies.get(\"token\")?.value;\n    const userId = request.cookies.get(\"userId\")?.value;\n    console.log(\"iserID\", userId);\n    const afterLoggedIn = request.nextUrl.pathname === \"/login\" || request.nextUrl.pathname === \"/signup\";\n    if (afterLoggedIn) {\n        if (authToken) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/\", request.url));\n        }\n    } else {\n        if (!authToken) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/login\", request.url));\n        } else {\n            // verify\n            const res = await fetch(\"http://localhost:4000/api/auth/verify-token\", {\n                method: \"GET\",\n                headers: {\n                    Authorization: \"Bearer \" + authToken\n                }\n            });\n            const data = await res.json();\n            console.log(\"middale\", data.userId);\n            if (data.userId !== userId) {\n                js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(\"token\");\n                js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(\"userId\");\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redirect(new URL(\"/login\", request.url));\n            }\n        }\n    }\n// const path = request.nextUrl.pathname\n// const isProtectedRoute = protectedRoutes.includes(path)\n// const isPublicRoute = publicRoutes.includes(path)\n// const data = useValidateUser(token.value)\n// console.log(\"token verification\",data)\n// if (!token) {\n//    return NextResponse.redirect(new URL('/login', request.url))\n// }\n// if ( request.nextUrl.pathname === \"/\") {\n//   return NextResponse.redirect(new URL('/', request.url))\n// }\n// if ( request.nextUrl.pathname === \"/products\") {\n//   return NextResponse.redirect(new URL('/products', request.url))\n// }\n// if ( request.nextUrl.pathname === \"/shop\") {\n//   return NextResponse.redirect(new URL('/shop', request.url))\n// }\n}\n// See \"Matching Paths\" below to learn more\nconst config = {\n    matcher: [\n        \"/login\",\n        \"/signup\",\n        \"/\",\n        \"/products\",\n        \"/products/:path*\",\n        \"/shop\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQztBQUlWO0FBR2hDLDhEQUE4RDtBQUU5RCxnQ0FBZ0M7QUFDaEMsNkNBQTZDO0FBRXRDLGVBQWVFLFdBQVlDLE9BQW9CO0lBR3BELE1BQU1DLFlBQVlELFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVDO0lBQ2hELE1BQU1DLFNBQVNMLFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFdBQVdDO0lBQzlDRSxRQUFRQyxHQUFHLENBQUMsVUFBU0Y7SUFFckIsTUFBTUcsZ0JBQWdCUixRQUFRUyxPQUFPLENBQUNDLFFBQVEsS0FBSyxZQUFZVixRQUFRUyxPQUFPLENBQUNDLFFBQVEsS0FBSztJQUU1RixJQUFJRixlQUFlO1FBQ2pCLElBQUlQLFdBQVc7WUFDYixPQUFPSixrRkFBWUEsQ0FBQ2MsUUFBUSxDQUFDLElBQUlDLElBQUksS0FBS1osUUFBUWEsR0FBRztRQUN2RDtJQUNGLE9BQU87UUFDTCxJQUFJLENBQUNaLFdBQVc7WUFDZCxPQUFPSixrRkFBWUEsQ0FBQ2MsUUFBUSxDQUFDLElBQUlDLElBQUksVUFBVVosUUFBUWEsR0FBRztRQUM1RCxPQUFPO1lBQ0wsU0FBUztZQUNULE1BQU1DLE1BQU0sTUFBTUMsTUFBTSwrQ0FBK0M7Z0JBQ3JFQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQQyxlQUFlLFlBQVlqQjtnQkFDN0I7WUFDRjtZQUNBLE1BQU1rQixPQUFPLE1BQU1MLElBQUlNLElBQUk7WUFDM0JkLFFBQVFDLEdBQUcsQ0FBQyxXQUFXWSxLQUFLZCxNQUFNO1lBQ2xDLElBQUljLEtBQUtkLE1BQU0sS0FBS0EsUUFBUztnQkFDM0JQLGlEQUFPQSxDQUFDdUIsTUFBTSxDQUFDO2dCQUNmdkIsaURBQU9BLENBQUN1QixNQUFNLENBQUM7Z0JBQ2YsT0FBT3hCLGtGQUFZQSxDQUFDYyxRQUFRLENBQUMsSUFBSUMsSUFBSSxVQUFVWixRQUFRYSxHQUFHO1lBQzVEO1FBQ0Y7SUFDRjtBQUdBLHdDQUF3QztBQUN4QywwREFBMEQ7QUFDMUQsb0RBQW9EO0FBQ3BELDRDQUE0QztBQUU1Qyx5Q0FBeUM7QUFHekMsZ0JBQWdCO0FBQ2hCLGtFQUFrRTtBQUNsRSxJQUFJO0FBRUosMkNBQTJDO0FBQzNDLDREQUE0RDtBQUM1RCxJQUFJO0FBRUosbURBQW1EO0FBQ25ELG9FQUFvRTtBQUNwRSxJQUFJO0FBRUosK0NBQStDO0FBQy9DLGdFQUFnRTtBQUNoRSxJQUFJO0FBQ047QUFFQSwyQ0FBMkM7QUFDcEMsTUFBTVMsU0FBUztJQUNwQkMsU0FBUztRQUNQO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0FBQ0gsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbWlkZGxld2FyZS50cz9kMTk5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyB1c2VWZXJpZnlUb2tlbiB9IGZyb20gJy4vaG9va3MvYXV0aC1ob29rcydcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xyXG5pbXBvcnQgQ29va2llcyBmcm9tIFwianMtY29va2llXCI7XHJcblxyXG4gXHJcbi8vIFRoaXMgZnVuY3Rpb24gY2FuIGJlIG1hcmtlZCBgYXN5bmNgIGlmIHVzaW5nIGBhd2FpdGAgaW5zaWRlXHJcblxyXG4vLyBjb25zdCBwcm90ZWN0ZWRSb3V0ZXMgPSBbJy8nXVxyXG4vLyBjb25zdCBwdWJsaWNSb3V0ZXMgPSBbJy9sb2dpbicsICcvc2lnbnVwJ11cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlIChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG5cclxuICBcclxuICBjb25zdCBhdXRoVG9rZW4gPSByZXF1ZXN0LmNvb2tpZXMuZ2V0KFwidG9rZW5cIik/LnZhbHVlXHJcbiAgY29uc3QgdXNlcklkID0gcmVxdWVzdC5jb29raWVzLmdldChcInVzZXJJZFwiKT8udmFsdWVcclxuICBjb25zb2xlLmxvZyhcImlzZXJJRFwiLHVzZXJJZClcclxuXHJcbiAgY29uc3QgYWZ0ZXJMb2dnZWRJbiA9IHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSA9PT0gXCIvbG9naW5cIiB8fCByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUgPT09IFwiL3NpZ251cFwiIFxyXG5cclxuICBpZiAoYWZ0ZXJMb2dnZWRJbikge1xyXG4gICAgaWYgKGF1dGhUb2tlbikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy8nLCByZXF1ZXN0LnVybCkpXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmICghYXV0aFRva2VuKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2xvZ2luJywgcmVxdWVzdC51cmwpKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gdmVyaWZ5XHJcbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FwaS9hdXRoL3ZlcmlmeS10b2tlblwiLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIEF1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgYXV0aFRva2VuXHJcbiAgICAgICAgfSBcclxuICAgICAgfSlcclxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKClcclxuICAgICAgY29uc29sZS5sb2coXCJtaWRkYWxlXCIsIGRhdGEudXNlcklkKVxyXG4gICAgICBpZiAoZGF0YS51c2VySWQgIT09IHVzZXJJZCApIHtcclxuICAgICAgICBDb29raWVzLnJlbW92ZShcInRva2VuXCIpO1xyXG4gICAgICAgIENvb2tpZXMucmVtb3ZlKFwidXNlcklkXCIpO1xyXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2xvZ2luJywgcmVxdWVzdC51cmwpKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBcclxuICAvLyBjb25zdCBwYXRoID0gcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lXHJcbiAgLy8gY29uc3QgaXNQcm90ZWN0ZWRSb3V0ZSA9IHByb3RlY3RlZFJvdXRlcy5pbmNsdWRlcyhwYXRoKVxyXG4gIC8vIGNvbnN0IGlzUHVibGljUm91dGUgPSBwdWJsaWNSb3V0ZXMuaW5jbHVkZXMocGF0aClcclxuICAvLyBjb25zdCBkYXRhID0gdXNlVmFsaWRhdGVVc2VyKHRva2VuLnZhbHVlKVxyXG5cclxuICAvLyBjb25zb2xlLmxvZyhcInRva2VuIHZlcmlmaWNhdGlvblwiLGRhdGEpXHJcblxyXG5cclxuICAvLyBpZiAoIXRva2VuKSB7XHJcbiAgLy8gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXF1ZXN0LnVybCkpXHJcbiAgLy8gfVxyXG5cclxuICAvLyBpZiAoIHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSA9PT0gXCIvXCIpIHtcclxuICAvLyAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnLycsIHJlcXVlc3QudXJsKSlcclxuICAvLyB9XHJcblxyXG4gIC8vIGlmICggcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lID09PSBcIi9wcm9kdWN0c1wiKSB7XHJcbiAgLy8gICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9wcm9kdWN0cycsIHJlcXVlc3QudXJsKSlcclxuICAvLyB9XHJcblxyXG4gIC8vIGlmICggcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lID09PSBcIi9zaG9wXCIpIHtcclxuICAvLyAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3Nob3AnLCByZXF1ZXN0LnVybCkpXHJcbiAgLy8gfVxyXG59XHJcbiBcclxuLy8gU2VlIFwiTWF0Y2hpbmcgUGF0aHNcIiBiZWxvdyB0byBsZWFybiBtb3JlXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogW1xyXG4gICAgXCIvbG9naW5cIiwgXHJcbiAgICBcIi9zaWdudXBcIixcclxuICAgIFwiL1wiLCBcclxuICAgIFwiL3Byb2R1Y3RzXCIsIFxyXG4gICAgXCIvcHJvZHVjdHMvOnBhdGgqXCIsIFxyXG4gICAgXCIvc2hvcFwiLCBcclxuICBdXHJcbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiQ29va2llcyIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0IiwiYXV0aFRva2VuIiwiY29va2llcyIsImdldCIsInZhbHVlIiwidXNlcklkIiwiY29uc29sZSIsImxvZyIsImFmdGVyTG9nZ2VkSW4iLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsInJlcyIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJkYXRhIiwianNvbiIsInJlbW92ZSIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ }),

/***/ "(middleware)/./node_modules/js-cookie/dist/js.cookie.mjs":
/*!***************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */ /* eslint-disable no-var */ function assign(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i];\n        for(var key in source){\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/* eslint-enable no-var */ /* eslint-disable no-var */ var defaultConverter = {\n    read: function(value) {\n        if (value[0] === '\"') {\n            value = value.slice(1, -1);\n        }\n        return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n    },\n    write: function(value) {\n        return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n    }\n};\n/* eslint-enable no-var */ /* eslint-disable no-var */ function init(converter, defaultAttributes) {\n    function set(name, value, attributes) {\n        if (typeof document === \"undefined\") {\n            return;\n        }\n        attributes = assign({}, defaultAttributes, attributes);\n        if (typeof attributes.expires === \"number\") {\n            attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n        }\n        if (attributes.expires) {\n            attributes.expires = attributes.expires.toUTCString();\n        }\n        name = encodeURIComponent(name).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n        var stringifiedAttributes = \"\";\n        for(var attributeName in attributes){\n            if (!attributes[attributeName]) {\n                continue;\n            }\n            stringifiedAttributes += \"; \" + attributeName;\n            if (attributes[attributeName] === true) {\n                continue;\n            }\n            // Considers RFC 6265 section 5.2:\n            // ...\n            // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n            //     character:\n            // Consume the characters of the unparsed-attributes up to,\n            // not including, the first %x3B (\";\") character.\n            // ...\n            stringifiedAttributes += \"=\" + attributes[attributeName].split(\";\")[0];\n        }\n        return document.cookie = name + \"=\" + converter.write(value, name) + stringifiedAttributes;\n    }\n    function get(name) {\n        if (typeof document === \"undefined\" || arguments.length && !name) {\n            return;\n        }\n        // To prevent the for loop in the first place assign an empty array\n        // in case there are no cookies at all.\n        var cookies = document.cookie ? document.cookie.split(\"; \") : [];\n        var jar = {};\n        for(var i = 0; i < cookies.length; i++){\n            var parts = cookies[i].split(\"=\");\n            var value = parts.slice(1).join(\"=\");\n            try {\n                var found = decodeURIComponent(parts[0]);\n                jar[found] = converter.read(value, found);\n                if (name === found) {\n                    break;\n                }\n            } catch (e) {}\n        }\n        return name ? jar[name] : jar;\n    }\n    return Object.create({\n        set,\n        get,\n        remove: function(name, attributes) {\n            set(name, \"\", assign({}, attributes, {\n                expires: -1\n            }));\n        },\n        withAttributes: function(attributes) {\n            return init(this.converter, assign({}, this.attributes, attributes));\n        },\n        withConverter: function(converter) {\n            return init(assign({}, this.converter, converter), this.attributes);\n        }\n    }, {\n        attributes: {\n            value: Object.freeze(defaultAttributes)\n        },\n        converter: {\n            value: Object.freeze(converter)\n        }\n    });\n}\nvar api = init(defaultConverter, {\n    path: \"/\"\n});\n/* eslint-enable no-var */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pzLWNvb2tpZS9kaXN0L2pzLmNvb2tpZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDJCQUEyQixHQUMzQix5QkFBeUIsR0FDekIsU0FBU0EsT0FBUUMsTUFBTTtJQUNyQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1FBQ3pDLElBQUlHLFNBQVNGLFNBQVMsQ0FBQ0QsRUFBRTtRQUN6QixJQUFLLElBQUlJLE9BQU9ELE9BQVE7WUFDdEJKLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFDM0I7SUFDRjtJQUNBLE9BQU9MO0FBQ1Q7QUFDQSx3QkFBd0IsR0FFeEIseUJBQXlCLEdBQ3pCLElBQUlNLG1CQUFtQjtJQUNyQkMsTUFBTSxTQUFVQyxLQUFLO1FBQ25CLElBQUlBLEtBQUssQ0FBQyxFQUFFLEtBQUssS0FBSztZQUNwQkEsUUFBUUEsTUFBTUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUMxQjtRQUNBLE9BQU9ELE1BQU1FLE9BQU8sQ0FBQyxvQkFBb0JDO0lBQzNDO0lBQ0FDLE9BQU8sU0FBVUosS0FBSztRQUNwQixPQUFPSyxtQkFBbUJMLE9BQU9FLE9BQU8sQ0FDdEMsNENBQ0FDO0lBRUo7QUFDRjtBQUNBLHdCQUF3QixHQUV4Qix5QkFBeUIsR0FFekIsU0FBU0csS0FBTUMsU0FBUyxFQUFFQyxpQkFBaUI7SUFDekMsU0FBU0MsSUFBS0MsSUFBSSxFQUFFVixLQUFLLEVBQUVXLFVBQVU7UUFDbkMsSUFBSSxPQUFPQyxhQUFhLGFBQWE7WUFDbkM7UUFDRjtRQUVBRCxhQUFhcEIsT0FBTyxDQUFDLEdBQUdpQixtQkFBbUJHO1FBRTNDLElBQUksT0FBT0EsV0FBV0UsT0FBTyxLQUFLLFVBQVU7WUFDMUNGLFdBQVdFLE9BQU8sR0FBRyxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUtKLFdBQVdFLE9BQU8sR0FBRztRQUNsRTtRQUNBLElBQUlGLFdBQVdFLE9BQU8sRUFBRTtZQUN0QkYsV0FBV0UsT0FBTyxHQUFHRixXQUFXRSxPQUFPLENBQUNHLFdBQVc7UUFDckQ7UUFFQU4sT0FBT0wsbUJBQW1CSyxNQUN2QlIsT0FBTyxDQUFDLHdCQUF3QkMsb0JBQ2hDRCxPQUFPLENBQUMsU0FBU2U7UUFFcEIsSUFBSUMsd0JBQXdCO1FBQzVCLElBQUssSUFBSUMsaUJBQWlCUixXQUFZO1lBQ3BDLElBQUksQ0FBQ0EsVUFBVSxDQUFDUSxjQUFjLEVBQUU7Z0JBQzlCO1lBQ0Y7WUFFQUQseUJBQXlCLE9BQU9DO1lBRWhDLElBQUlSLFVBQVUsQ0FBQ1EsY0FBYyxLQUFLLE1BQU07Z0JBQ3RDO1lBQ0Y7WUFFQSxrQ0FBa0M7WUFDbEMsTUFBTTtZQUNOLGlFQUFpRTtZQUNqRSxpQkFBaUI7WUFDakIsMkRBQTJEO1lBQzNELGlEQUFpRDtZQUNqRCxNQUFNO1lBQ05ELHlCQUF5QixNQUFNUCxVQUFVLENBQUNRLGNBQWMsQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3hFO1FBRUEsT0FBUVIsU0FBU1MsTUFBTSxHQUNyQlgsT0FBTyxNQUFNSCxVQUFVSCxLQUFLLENBQUNKLE9BQU9VLFFBQVFRO0lBQ2hEO0lBRUEsU0FBU0ksSUFBS1osSUFBSTtRQUNoQixJQUFJLE9BQU9FLGFBQWEsZUFBZ0JsQixVQUFVQyxNQUFNLElBQUksQ0FBQ2UsTUFBTztZQUNsRTtRQUNGO1FBRUEsbUVBQW1FO1FBQ25FLHVDQUF1QztRQUN2QyxJQUFJYSxVQUFVWCxTQUFTUyxNQUFNLEdBQUdULFNBQVNTLE1BQU0sQ0FBQ0QsS0FBSyxDQUFDLFFBQVEsRUFBRTtRQUNoRSxJQUFJSSxNQUFNLENBQUM7UUFDWCxJQUFLLElBQUkvQixJQUFJLEdBQUdBLElBQUk4QixRQUFRNUIsTUFBTSxFQUFFRixJQUFLO1lBQ3ZDLElBQUlnQyxRQUFRRixPQUFPLENBQUM5QixFQUFFLENBQUMyQixLQUFLLENBQUM7WUFDN0IsSUFBSXBCLFFBQVF5QixNQUFNeEIsS0FBSyxDQUFDLEdBQUd5QixJQUFJLENBQUM7WUFFaEMsSUFBSTtnQkFDRixJQUFJQyxRQUFReEIsbUJBQW1Cc0IsS0FBSyxDQUFDLEVBQUU7Z0JBQ3ZDRCxHQUFHLENBQUNHLE1BQU0sR0FBR3BCLFVBQVVSLElBQUksQ0FBQ0MsT0FBTzJCO2dCQUVuQyxJQUFJakIsU0FBU2lCLE9BQU87b0JBQ2xCO2dCQUNGO1lBQ0YsRUFBRSxPQUFPQyxHQUFHLENBQUM7UUFDZjtRQUVBLE9BQU9sQixPQUFPYyxHQUFHLENBQUNkLEtBQUssR0FBR2M7SUFDNUI7SUFFQSxPQUFPSyxPQUFPQyxNQUFNLENBQ2xCO1FBQ0VyQjtRQUNBYTtRQUNBUyxRQUFRLFNBQVVyQixJQUFJLEVBQUVDLFVBQVU7WUFDaENGLElBQ0VDLE1BQ0EsSUFDQW5CLE9BQU8sQ0FBQyxHQUFHb0IsWUFBWTtnQkFDckJFLFNBQVMsQ0FBQztZQUNaO1FBRUo7UUFDQW1CLGdCQUFnQixTQUFVckIsVUFBVTtZQUNsQyxPQUFPTCxLQUFLLElBQUksQ0FBQ0MsU0FBUyxFQUFFaEIsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDb0IsVUFBVSxFQUFFQTtRQUMxRDtRQUNBc0IsZUFBZSxTQUFVMUIsU0FBUztZQUNoQyxPQUFPRCxLQUFLZixPQUFPLENBQUMsR0FBRyxJQUFJLENBQUNnQixTQUFTLEVBQUVBLFlBQVksSUFBSSxDQUFDSSxVQUFVO1FBQ3BFO0lBQ0YsR0FDQTtRQUNFQSxZQUFZO1lBQUVYLE9BQU82QixPQUFPSyxNQUFNLENBQUMxQjtRQUFtQjtRQUN0REQsV0FBVztZQUFFUCxPQUFPNkIsT0FBT0ssTUFBTSxDQUFDM0I7UUFBVztJQUMvQztBQUVKO0FBRUEsSUFBSTRCLE1BQU03QixLQUFLUixrQkFBa0I7SUFBRXNDLE1BQU07QUFBSTtBQUM3Qyx3QkFBd0IsR0FFRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvanMtY29va2llL2Rpc3QvanMuY29va2llLm1qcz9hNzlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBqcy1jb29raWUgdjMuMC41IHwgTUlUICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbmZ1bmN0aW9uIGFzc2lnbiAodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFyZ2V0XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXZhciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbnZhciBkZWZhdWx0Q29udmVydGVyID0ge1xuICByZWFkOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBpZiAodmFsdWVbMF0gPT09ICdcIicpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMSwgLTEpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvKCVbXFxkQS1GXXsyfSkrL2dpLCBkZWNvZGVVUklDb21wb25lbnQpXG4gIH0sXG4gIHdyaXRlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKS5yZXBsYWNlKFxuICAgICAgLyUoMlszNDZCRl18M1tBQy1GXXw0MHw1W0JERV18NjB8N1tCQ0RdKS9nLFxuICAgICAgZGVjb2RlVVJJQ29tcG9uZW50XG4gICAgKVxuICB9XG59O1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG5cbmZ1bmN0aW9uIGluaXQgKGNvbnZlcnRlciwgZGVmYXVsdEF0dHJpYnV0ZXMpIHtcbiAgZnVuY3Rpb24gc2V0IChuYW1lLCB2YWx1ZSwgYXR0cmlidXRlcykge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBhdHRyaWJ1dGVzID0gYXNzaWduKHt9LCBkZWZhdWx0QXR0cmlidXRlcywgYXR0cmlidXRlcyk7XG5cbiAgICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMuZXhwaXJlcyA9PT0gJ251bWJlcicpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IG5ldyBEYXRlKERhdGUubm93KCkgKyBhdHRyaWJ1dGVzLmV4cGlyZXMgKiA4NjRlNSk7XG4gICAgfVxuICAgIGlmIChhdHRyaWJ1dGVzLmV4cGlyZXMpIHtcbiAgICAgIGF0dHJpYnV0ZXMuZXhwaXJlcyA9IGF0dHJpYnV0ZXMuZXhwaXJlcy50b1VUQ1N0cmluZygpO1xuICAgIH1cblxuICAgIG5hbWUgPSBlbmNvZGVVUklDb21wb25lbnQobmFtZSlcbiAgICAgIC5yZXBsYWNlKC8lKDJbMzQ2Ql18NUV8NjB8N0MpL2csIGRlY29kZVVSSUNvbXBvbmVudClcbiAgICAgIC5yZXBsYWNlKC9bKCldL2csIGVzY2FwZSk7XG5cbiAgICB2YXIgc3RyaW5naWZpZWRBdHRyaWJ1dGVzID0gJyc7XG4gICAgZm9yICh2YXIgYXR0cmlidXRlTmFtZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICBpZiAoIWF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0pIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc3RyaW5naWZpZWRBdHRyaWJ1dGVzICs9ICc7ICcgKyBhdHRyaWJ1dGVOYW1lO1xuXG4gICAgICBpZiAoYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXSA9PT0gdHJ1ZSkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyBDb25zaWRlcnMgUkZDIDYyNjUgc2VjdGlvbiA1LjI6XG4gICAgICAvLyAuLi5cbiAgICAgIC8vIDMuICBJZiB0aGUgcmVtYWluaW5nIHVucGFyc2VkLWF0dHJpYnV0ZXMgY29udGFpbnMgYSAleDNCIChcIjtcIilcbiAgICAgIC8vICAgICBjaGFyYWN0ZXI6XG4gICAgICAvLyBDb25zdW1lIHRoZSBjaGFyYWN0ZXJzIG9mIHRoZSB1bnBhcnNlZC1hdHRyaWJ1dGVzIHVwIHRvLFxuICAgICAgLy8gbm90IGluY2x1ZGluZywgdGhlIGZpcnN0ICV4M0IgKFwiO1wiKSBjaGFyYWN0ZXIuXG4gICAgICAvLyAuLi5cbiAgICAgIHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnPScgKyBhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdLnNwbGl0KCc7JylbMF07XG4gICAgfVxuXG4gICAgcmV0dXJuIChkb2N1bWVudC5jb29raWUgPVxuICAgICAgbmFtZSArICc9JyArIGNvbnZlcnRlci53cml0ZSh2YWx1ZSwgbmFtZSkgKyBzdHJpbmdpZmllZEF0dHJpYnV0ZXMpXG4gIH1cblxuICBmdW5jdGlvbiBnZXQgKG5hbWUpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJyB8fCAoYXJndW1lbnRzLmxlbmd0aCAmJiAhbmFtZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXlcbiAgICAvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC5cbiAgICB2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdO1xuICAgIHZhciBqYXIgPSB7fTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwYXJ0cyA9IGNvb2tpZXNbaV0uc3BsaXQoJz0nKTtcbiAgICAgIHZhciB2YWx1ZSA9IHBhcnRzLnNsaWNlKDEpLmpvaW4oJz0nKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGZvdW5kID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhcnRzWzBdKTtcbiAgICAgICAgamFyW2ZvdW5kXSA9IGNvbnZlcnRlci5yZWFkKHZhbHVlLCBmb3VuZCk7XG5cbiAgICAgICAgaWYgKG5hbWUgPT09IGZvdW5kKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZSkge31cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZSA/IGphcltuYW1lXSA6IGphclxuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5jcmVhdGUoXG4gICAge1xuICAgICAgc2V0LFxuICAgICAgZ2V0LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAobmFtZSwgYXR0cmlidXRlcykge1xuICAgICAgICBzZXQoXG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICAnJyxcbiAgICAgICAgICBhc3NpZ24oe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgICAgICAgIGV4cGlyZXM6IC0xXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICB3aXRoQXR0cmlidXRlczogZnVuY3Rpb24gKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0dXJuIGluaXQodGhpcy5jb252ZXJ0ZXIsIGFzc2lnbih7fSwgdGhpcy5hdHRyaWJ1dGVzLCBhdHRyaWJ1dGVzKSlcbiAgICAgIH0sXG4gICAgICB3aXRoQ29udmVydGVyOiBmdW5jdGlvbiAoY29udmVydGVyKSB7XG4gICAgICAgIHJldHVybiBpbml0KGFzc2lnbih7fSwgdGhpcy5jb252ZXJ0ZXIsIGNvbnZlcnRlciksIHRoaXMuYXR0cmlidXRlcylcbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGF0dHJpYnV0ZXM6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoZGVmYXVsdEF0dHJpYnV0ZXMpIH0sXG4gICAgICBjb252ZXJ0ZXI6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUoY29udmVydGVyKSB9XG4gICAgfVxuICApXG59XG5cbnZhciBhcGkgPSBpbml0KGRlZmF1bHRDb252ZXJ0ZXIsIHsgcGF0aDogJy8nIH0pO1xuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuZXhwb3J0IHsgYXBpIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJhc3NpZ24iLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwiZGVmYXVsdENvbnZlcnRlciIsInJlYWQiLCJ2YWx1ZSIsInNsaWNlIiwicmVwbGFjZSIsImRlY29kZVVSSUNvbXBvbmVudCIsIndyaXRlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiaW5pdCIsImNvbnZlcnRlciIsImRlZmF1bHRBdHRyaWJ1dGVzIiwic2V0IiwibmFtZSIsImF0dHJpYnV0ZXMiLCJkb2N1bWVudCIsImV4cGlyZXMiLCJEYXRlIiwibm93IiwidG9VVENTdHJpbmciLCJlc2NhcGUiLCJzdHJpbmdpZmllZEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVOYW1lIiwic3BsaXQiLCJjb29raWUiLCJnZXQiLCJjb29raWVzIiwiamFyIiwicGFydHMiLCJqb2luIiwiZm91bmQiLCJlIiwiT2JqZWN0IiwiY3JlYXRlIiwicmVtb3ZlIiwid2l0aEF0dHJpYnV0ZXMiLCJ3aXRoQ29udmVydGVyIiwiZnJlZXplIiwiYXBpIiwicGF0aCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/js-cookie/dist/js.cookie.mjs\n");

/***/ })

});